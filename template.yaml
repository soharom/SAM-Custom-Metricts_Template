AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloudwatchTest

  Application SAM Template for cloudwatchTest

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  FunctionSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
        DisplayName: "My SNS Topic for function alarm "
        TopicName: "functionTopic"

  FunctionSnsSupscriptions:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: "email"
      Endpoint: "souheib.abdelhak.3@gmail.com"
      TopicArn: !Ref FunctionSnsTopic

  FunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription:  "This alarm is for custom metric generated by the function"
      Namespace: "InsuranceApplication"
      MetricName: "HealthCheck"
      Dimensions:
        - Name: "Application"
          Value: "Region_1"
      Period: 10
      EvaluationPeriods: 1
      Statistic: "Average"
      Threshold: 1
      ComparisonOperator: LessThanOrEqualToThreshold
      AlarmActions:
        - !Ref FunctionSnsTopic

  RoleApplicationFunction:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'  
  ApplicationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: generateMetrics/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt RoleApplicationFunction.Arn
      Architectures:
        - x86_64
      Events:
        Application:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /application
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApplicationApi:
    Description: "API Gateway endpoint URL for Prod stage for application  function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/application/"
  ApplicationFunction:
    Description: "application Lambda Function ARN"
    Value: !GetAtt ApplicationFunction.Arn
  ApplicationFunctionIamRole:
    Description: "Explicit IAM Role created for Application function"
    Value: !GetAtt RoleApplicationFunction.Arn
  ApplicationSnsTopic:
    Description: "Sns topic for alarm notifiction"
    Value: !GetAtt FunctionSnsTopic.TopicArn
  
